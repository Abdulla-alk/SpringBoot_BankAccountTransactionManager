openapi: 3.0.0
info:
  version: 1.0.0
  title: Account Management API Documentation
  description: API documentation for the Account Management System
servers:
  - url: http://127.0.0.1:8080
    description: Local server

paths:
  /customers:
    post:
      summary: Create a new customer
      operationId: createCustomer
      description: Create a new customer
      tags:
        - Customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        201:
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    get:
      summary: Retrieve all customers
      operationId: getAllCustomers
      description: Retrieve all customers
      tags:
        - Customer
      responses:
        200:
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /customers/{id}:
    get:
      summary: Retrieve a customer by ID
      operationId: getCustomerById
      description: Retrieve a customer by ID
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: Update customer information
      operationId: updateCustomer
      description: Update customer information by ID
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: Customer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: Delete a customer by ID
      operationId: deleteCustomer
      description: Delete a customer by ID
      tags:
        - Customer
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Customer deleted successfully
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accounts:
    post:
      summary: Create a new account
      operationId: createAccount
      description: Create a new account
      tags:
        - Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        201:
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    get:
      summary: Retrieve all accounts
      operationId: getAllAccounts
      description: Retrieve all accounts
      tags:
        - Account
      responses:
        200:
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accounts/{id}:
    get:
      summary: Retrieve an account by ID
      operationId: getAccountById
      description: Retrieve an account by ID
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    put:
      summary: Update account information
      operationId: updateAccount
      description: Update account information by ID
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        200:
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'
    delete:
      summary: Delete an account by ID
      operationId: deleteAccount
      description: Delete an account by ID
      tags:
        - Account
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Account deleted successfully
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accounts/customer/{customerId}:
    get:
      summary: Retrieve accounts by customer ID
      operationId: getAccountsByCustomerId
      description: Retrieve accounts by customer ID
      tags:
        - Account
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Accounts for the customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accounts/{accountId}/topup:
    post:
      summary: Top up an account
      operationId: topUpAccount
      description: Top up an account
      tags:
        - Account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTransaction'
      responses:
        200:
          description: Account topped up successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransaction'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accounts/{accountId}/withdraw:
    post:
      summary: Withdraw from an account
      operationId: withdrawFromAccount
      description: Withdraw from an account
      tags:
        - Account
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTransaction'
      responses:
        200:
          description: Amount withdrawn successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransaction'
        400:
          $ref: '#/components/responses/ErrorResponse'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /transactions:
    get:
      summary: Retrieve all transactions
      operationId: getAllTransactions
      description: Retrieve all transactions
      tags:
        - Transaction
      responses:
        200:
          description: A list of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountTransaction'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /transactions/{id}:
    get:
      summary: Retrieve a transaction by ID
      operationId: getTransactionById
      description: Retrieve a transaction by ID
      tags:
        - Transaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTransaction'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /transactions/account/{accountId}:
    get:
      summary: Retrieve transactions by account ID
      operationId: getTransactionsByAccountId
      description: Retrieve transactions by account ID
      tags:
        - Transaction
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Transactions for the account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountTransaction'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /customerStatuses:
    get:
      summary: Retrieve all customer statuses
      operationId: getAllCustomerStatuses
      description: Retrieve all customer statuses
      tags:
        - Status
      responses:
        200:
          description: A list of customer statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerStatus'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /customerStatuses/{id}:
    get:
      summary: Retrieve a customer status by ID
      operationId: getCustomerStatusById
      description: Retrieve a customer status by ID
      tags:
        - Status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Customer status details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerStatus'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accountStatuses:
    get:
      summary: Retrieve all account statuses
      operationId: getAllAccountStatuses
      description: Retrieve all account statuses
      tags:
        - Status
      responses:
        200:
          description: A list of account statuses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountStatus'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accountStatuses/{id}:
    get:
      summary: Retrieve an account status by ID
      operationId: getAccountStatusById
      description: Retrieve an account status by ID
      tags:
        - Status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Account status details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatus'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accountTypes:
    get:
      summary: Retrieve all account types
      operationId: getAllAccountTypes
      description: Retrieve all account types
      tags:
        - Type
      responses:
        200:
          description: A list of account types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountType'
        500:
          $ref: '#/components/responses/ErrorResponse'

  /accountTypes/{id}:
    get:
      summary: Retrieve an account type by ID
      operationId: getAccountTypeById
      description: Retrieve an account type by ID
      tags:
        - Type
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Account type details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountType'
        404:
          $ref: '#/components/responses/ErrorResponse'
        500:
          $ref: '#/components/responses/ErrorResponse'

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        address:
          type: string
        dateOfBirth:
          type: string
          format: date
        statusId:
          type: integer
          format: int64

    Account:
      type: object
      properties:
        id:
          type: integer
          format: int64
        accountNumber:
          type: string
        accountTypeId:
          type: integer
          format: int64
        balance:
          type: number
          format: double
        customerId:
          type: integer
          format: int64
        statusId:
          type: integer
          format: int64

    AccountTransaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        accountId:
          type: integer
          format: int64
        transactionType:
          type: string
        amount:
          type: number
          format: double
        transactionDate:
          type: string
          format: date-time
        description:
          type: string

    CustomerStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        statusName:
          type: string

    AccountStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        statusName:
          type: string

    AccountType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        typeName:
          type: string

  responses:
    ErrorResponse:
      description: Error response
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.api;

import com.example.model.AccountTransaction;
import com.example.model.InlineResponse500;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-06-12T09:31:42.724245+03:00[Asia/Bahrain]")
@Validated
@Api(value = "Transaction", description = "the Transaction API")
public interface TransactionApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /transactions : Retrieve all transactions
     * Retrieve all transactions
     *
     * @return A list of transactions (status code 200)
     *         or Error response (status code 500)
     */

    @ApiOperation(value = "Retrieve all transactions", nickname = "getAllTransactions", notes = "Retrieve all transactions", response = AccountTransaction.class, responseContainer = "List", tags={ "Transaction", })
    @ApiResponses(value = { 

        @ApiResponse(code = 200, message = "A list of transactions", response = AccountTransaction.class, responseContainer = "List"),

        @ApiResponse(code = 500, message = "Error response", response = InlineResponse500.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/transactions",
        produces = { "application/json" }
    )
    default ResponseEntity<List<AccountTransaction>> getAllTransactions() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"transactionType\" : \"transactionType\", \"accountId\" : 6, \"amount\" : 1.4658129805029452, \"description\" : \"description\", \"id\" : 0, \"transactionDate\" : \"2000-01-23T04:56:07.000+00:00\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /transactions/{id} : Retrieve a transaction by ID
     * Retrieve a transaction by ID
     *
     * @param id  (required)
     * @return Transaction details (status code 200)
     *         or Error response (status code 404)
     *         or Error response (status code 500)
     */

    @ApiOperation(value = "Retrieve a transaction by ID", nickname = "getTransactionById", notes = "Retrieve a transaction by ID", response = AccountTransaction.class, tags={ "Transaction", })
    @ApiResponses(value = { 

        @ApiResponse(code = 200, message = "Transaction details", response = AccountTransaction.class),

        @ApiResponse(code = 404, message = "Error response", response = InlineResponse500.class),

        @ApiResponse(code = 500, message = "Error response", response = InlineResponse500.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/transactions/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<AccountTransaction> getTransactionById(@ApiParam(value = "", required = true) @PathVariable("id") Long id

) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"transactionType\" : \"transactionType\", \"accountId\" : 6, \"amount\" : 1.4658129805029452, \"description\" : \"description\", \"id\" : 0, \"transactionDate\" : \"2000-01-23T04:56:07.000+00:00\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /transactions/account/{accountId} : Retrieve transactions by account ID
     * Retrieve transactions by account ID
     *
     * @param accountId  (required)
     * @return Transactions for the account (status code 200)
     *         or Error response (status code 404)
     *         or Error response (status code 500)
     */

    @ApiOperation(value = "Retrieve transactions by account ID", nickname = "getTransactionsByAccountId", notes = "Retrieve transactions by account ID", response = AccountTransaction.class, responseContainer = "List", tags={ "Transaction", })
    @ApiResponses(value = { 

        @ApiResponse(code = 200, message = "Transactions for the account", response = AccountTransaction.class, responseContainer = "List"),

        @ApiResponse(code = 404, message = "Error response", response = InlineResponse500.class),

        @ApiResponse(code = 500, message = "Error response", response = InlineResponse500.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/transactions/account/{accountId}",
        produces = { "application/json" }
    )
    default ResponseEntity<List<AccountTransaction>> getTransactionsByAccountId(@ApiParam(value = "", required = true) @PathVariable("accountId") Long accountId

) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"transactionType\" : \"transactionType\", \"accountId\" : 6, \"amount\" : 1.4658129805029452, \"description\" : \"description\", \"id\" : 0, \"transactionDate\" : \"2000-01-23T04:56:07.000+00:00\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
